{"includedArchiveIdentifiers":["App"],"interfaceLanguages":{"swift":[{"children":[{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/person\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/person\/init(name:fullname:)","title":"init(name: String, fullName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/person\/bio","title":"var bio: String","type":"property"},{"path":"\/documentation\/app\/person\/createdat","title":"var createdAt: Date","type":"property"},{"path":"\/documentation\/app\/person\/endpoints","title":"var endpoints: PersonEndpoints","type":"property"},{"path":"\/documentation\/app\/person\/featured","title":"var featured: String","type":"property"},{"path":"\/documentation\/app\/person\/featuredtags","title":"var featuredTags: String","type":"property"},{"path":"\/documentation\/app\/person\/followers","title":"var followers: String","type":"property"},{"path":"\/documentation\/app\/person\/following","title":"var following: String","type":"property"},{"path":"\/documentation\/app\/person\/fullname","title":"var fullName: String","type":"property"},{"path":"\/documentation\/app\/person\/headerpictureurl","title":"var headerPictureURL: String","type":"property"},{"path":"\/documentation\/app\/person\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/app\/person\/inbox","title":"var inbox: String","type":"property"},{"path":"\/documentation\/app\/person\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/app\/person\/outbox","title":"var outbox: String","type":"property"},{"path":"\/documentation\/app\/person\/profilepictureurl","title":"var profilePictureURL: String","type":"property"},{"path":"\/documentation\/app\/person\/publickeycredentialuserentity","title":"var publicKeyCredentialUserEntity: PublicKeyCredentialUserEntity","type":"property"},{"path":"\/documentation\/app\/person\/publicurl","title":"var publicURL: String","type":"property"},{"path":"\/documentation\/app\/person\/realurl","title":"var realURL: String","type":"property"},{"path":"\/documentation\/app\/person\/serverdialect","title":"var serverDialect: ServerDialect","type":"property"},{"path":"\/documentation\/app\/person\/sessioncreatedat","title":"var sessionCreatedAt: Date?","type":"property"},{"path":"\/documentation\/app\/person\/sessionid","title":"var sessionId: String?","type":"property"},{"path":"\/documentation\/app\/person\/type","title":"var type: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/person\/requireid()","title":"func requireID() throws -> UUID","type":"method"},{"path":"\/documentation\/app\/person\/tomastodonaccount()","title":"func toMastodonAccount() -> MastodonAccount","type":"method"}],"path":"\/documentation\/app\/person","title":"Person","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/status\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/status\/init(frommastodonstatus:)","title":"init(fromMastodonStatus: MastodonStatus)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/status\/accountid","title":"var accountId: String?","type":"property"},{"path":"\/documentation\/app\/status\/applicationid","title":"var applicationId: String?","type":"property"},{"path":"\/documentation\/app\/status\/content","title":"var content: String","type":"property"},{"path":"\/documentation\/app\/status\/conversationid","title":"var conversationId: String?","type":"property"},{"path":"\/documentation\/app\/status\/createdat","title":"var createdAt: String","type":"property"},{"path":"\/documentation\/app\/status\/deletedat","title":"var deletedAt: String?","type":"property"},{"path":"\/documentation\/app\/status\/editedat","title":"var editedAt: String?","type":"property"},{"path":"\/documentation\/app\/status\/id","title":"var id: UUID?","type":"property"},{"path":"\/documentation\/app\/status\/inreplytoaccountid","title":"var inReplyToAccountId: String?","type":"property"},{"path":"\/documentation\/app\/status\/inreplytoid","title":"var inReplyToId: String?","type":"property"},{"path":"\/documentation\/app\/status\/language","title":"var language: String","type":"property"},{"path":"\/documentation\/app\/status\/local","title":"var local: Bool","type":"property"},{"path":"\/documentation\/app\/status\/orderedmediaattachments","title":"var orderedMediaAttachments: [String]","type":"property"},{"path":"\/documentation\/app\/status\/pollid","title":"var pollId: String?","type":"property"},{"path":"\/documentation\/app\/status\/reblogofid","title":"var reblogOfId: String?","type":"property"},{"path":"\/documentation\/app\/status\/reply","title":"var reply: Bool","type":"property"},{"path":"\/documentation\/app\/status\/sensitive","title":"var sensitive: Bool","type":"property"},{"path":"\/documentation\/app\/status\/spoilertext","title":"var spoilerText: String?","type":"property"},{"path":"\/documentation\/app\/status\/trendable","title":"var trendable: Bool?","type":"property"},{"path":"\/documentation\/app\/status\/updatedat","title":"var updatedAt: String?","type":"property"},{"path":"\/documentation\/app\/status\/uri","title":"var uri: String","type":"property"},{"path":"\/documentation\/app\/status\/url","title":"var url: String","type":"property"},{"path":"\/documentation\/app\/status\/visibility","title":"var visibility: String","type":"property"}],"path":"\/documentation\/app\/status","title":"Status","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/link\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/link\/init(href:rel:type:mediatype:)","title":"init(href: String, rel: URL?, type: String, mediaType: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/link\/href","title":"var href: String","type":"property"},{"path":"\/documentation\/app\/link\/islink","title":"let isLink: Bool","type":"property"},{"path":"\/documentation\/app\/link\/isobject","title":"let isObject: Bool","type":"property"},{"path":"\/documentation\/app\/link\/mediatype","title":"var mediaType: String?","type":"property"},{"path":"\/documentation\/app\/link\/rel","title":"var rel: URL?","type":"property"},{"path":"\/documentation\/app\/link\/type","title":"var type: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/link\/codingkeys\/href","title":"case href","type":"case"},{"path":"\/documentation\/app\/link\/codingkeys\/mediatype","title":"case mediaType","type":"case"},{"path":"\/documentation\/app\/link\/codingkeys\/rel","title":"case rel","type":"case"},{"path":"\/documentation\/app\/link\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/link\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/app\/link\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/app\/link\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/link\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/app\/link\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/link\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/app\/link\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/app\/link\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/link\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/link\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/app\/link\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/app\/link\/codingkeys","title":"Link.CodingKeys","type":"enum"}],"path":"\/documentation\/app\/link","title":"Link","type":"struct"},{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/app\/signingbehaviour","title":"Signing behaviour","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/fluentpersonmodel\/init(frompersonmodel:)","title":"init(fromPersonModel: Person)","type":"init"},{"path":"\/documentation\/app\/fluentpersonmodel\/init(type:id:serverdialect:following:followers:inbox:outbox:featured:featuredtags:endpoints:)","title":"init(type: String, id: String, serverDialect: String, following: String, followers: String, inbox: String, outbox: String, featured: String, featuredTags: String, endpoints: PersonEndpoints)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/bio","title":"var bio: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/createdat","title":"var createdAt: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/endpointsharedinbox","title":"var endpointSharedInbox: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/featured","title":"var featured: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/featuredtags","title":"var featuredTags: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/followers","title":"var followers: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/following","title":"var following: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/fullname","title":"var fullName: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/headerpictureurl","title":"var headerPictureURL: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/id","title":"var id: UUID?","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/inbox","title":"var inbox: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/outbox","title":"var outbox: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/profilepictureurl","title":"var profilePictureURL: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/publicurl","title":"var publicURL: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/realurl","title":"var realURL: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/serverdialect","title":"var serverDialect: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/sessioncreatedat","title":"var sessionCreatedAt: String?","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/sessionid","title":"var sessionId: String?","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/type","title":"var type: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/webauthncredential","title":"var webAuthnCredential: FluentWebAuthnCredential?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/fluentmodeltopersonmodel()","title":"func fluentModelToPersonModel() -> Person","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/app\/fluentpersonmodel\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/fluentpersonmodel\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/fluentpersonmodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/fluentpersonmodel\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/collectinput(withdefaultedvalues:)","title":"func collectInput(withDefaultedValues: Bool) -> [FieldKey : DatabaseQuery.Value]","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/boolean","title":"FluentPersonModel.Boolean","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/enum","title":"FluentPersonModel.Enum","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/field","title":"FluentPersonModel.Field","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/group","title":"FluentPersonModel.Group","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/optionalboolean","title":"FluentPersonModel.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/optionalenum","title":"FluentPersonModel.OptionalEnum","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/optionalfield","title":"FluentPersonModel.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/app\/fluentpersonmodel\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/children","title":"FluentPersonModel.Children","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/compositechildren","title":"FluentPersonModel.CompositeChildren","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/compositeid","title":"FluentPersonModel.CompositeID","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/compositeoptionalchild","title":"FluentPersonModel.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/compositeoptionalparent","title":"FluentPersonModel.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/compositeparent","title":"FluentPersonModel.CompositeParent","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/id-swift.typealias","title":"FluentPersonModel.ID","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/optionalchild","title":"FluentPersonModel.OptionalChild","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/optionalparent","title":"FluentPersonModel.OptionalParent","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/parent","title":"FluentPersonModel.Parent","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/siblings","title":"FluentPersonModel.Siblings","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonmodel\/timestamp","title":"FluentPersonModel.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/find(_:on:)-2g187","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/find(_:on:)-44017","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/app\/fluentpersonmodel\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/app\/fluentpersonmodel\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonmodel\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/app\/fluentpersonmodel\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/app\/fluentpersonmodel\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/app\/fluentpersonmodel","title":"FluentPersonModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/fluentstatusmodel\/init(from:)","title":"init(from: Status)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/accountid","title":"var accountId: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/applicationid","title":"var applicationId: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/content","title":"var content: String","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/conversationid","title":"var conversationId: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/createdat","title":"var createdAt: String","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/deletedat","title":"var deletedAt: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/editedat","title":"var editedAt: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/id","title":"var id: UUID?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/inreplytoaccountid","title":"var inReplyToAccountId: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/inreplytoid","title":"var inReplyToId: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/language","title":"var language: String","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/local","title":"var local: Bool","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/orderedmediaattachments","title":"var orderedMediaAttachments: [String]","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/pollid","title":"var pollId: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/reblogofid","title":"var reblogOfId: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/reply","title":"var reply: Bool","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/sensitive","title":"var sensitive: Bool","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/spoilertext","title":"var spoilerText: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/trendable","title":"var trendable: Bool?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/updatedat","title":"var updatedAt: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/uri","title":"var uri: String","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/url","title":"var url: String","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/visibility","title":"var visibility: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/app\/fluentstatusmodel\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/fluentstatusmodel\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/init(from:)-5od8q","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/fluentstatusmodel\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/fluentstatusmodel\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/collectinput(withdefaultedvalues:)","title":"func collectInput(withDefaultedValues: Bool) -> [FieldKey : DatabaseQuery.Value]","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/boolean","title":"FluentStatusModel.Boolean","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/enum","title":"FluentStatusModel.Enum","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/field","title":"FluentStatusModel.Field","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/group","title":"FluentStatusModel.Group","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/optionalboolean","title":"FluentStatusModel.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/optionalenum","title":"FluentStatusModel.OptionalEnum","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/optionalfield","title":"FluentStatusModel.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/app\/fluentstatusmodel\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/children","title":"FluentStatusModel.Children","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/compositechildren","title":"FluentStatusModel.CompositeChildren","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/compositeid","title":"FluentStatusModel.CompositeID","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/compositeoptionalchild","title":"FluentStatusModel.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/compositeoptionalparent","title":"FluentStatusModel.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/compositeparent","title":"FluentStatusModel.CompositeParent","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/id-swift.typealias","title":"FluentStatusModel.ID","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/optionalchild","title":"FluentStatusModel.OptionalChild","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/optionalparent","title":"FluentStatusModel.OptionalParent","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/parent","title":"FluentStatusModel.Parent","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/siblings","title":"FluentStatusModel.Siblings","type":"typealias"},{"path":"\/documentation\/app\/fluentstatusmodel\/timestamp","title":"FluentStatusModel.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/find(_:on:)-22y8k","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/find(_:on:)-8cd5u","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/app\/fluentstatusmodel\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/app\/fluentstatusmodel\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusmodel\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/app\/fluentstatusmodel\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/app\/fluentstatusmodel\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/app\/fluentstatusmodel","title":"FluentStatusModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/fluentwebauthncredential\/init(credential:userid:)","title":"convenience init(credential: Credential, userId: UUID)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/fluentpersonmodel","title":"var fluentPersonModel: FluentPersonModel","type":"property"},{"path":"\/documentation\/app\/fluentwebauthncredential\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/app\/fluentwebauthncredential\/publickey","title":"var publicKey: EncodedBase64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/towebauthnmodel()","title":"func toWebAuthNModel() -> WebAuthNModel?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/app\/fluentwebauthncredential\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/fluentwebauthncredential\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/fluentwebauthncredential\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/fluentwebauthncredential\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/app\/fluentwebauthncredential\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/app\/fluentwebauthncredential\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/app\/fluentwebauthncredential\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/collectinput(withdefaultedvalues:)","title":"func collectInput(withDefaultedValues: Bool) -> [FieldKey : DatabaseQuery.Value]","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/boolean","title":"FluentWebAuthnCredential.Boolean","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/enum","title":"FluentWebAuthnCredential.Enum","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/field","title":"FluentWebAuthnCredential.Field","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/group","title":"FluentWebAuthnCredential.Group","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/optionalboolean","title":"FluentWebAuthnCredential.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/optionalenum","title":"FluentWebAuthnCredential.OptionalEnum","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/optionalfield","title":"FluentWebAuthnCredential.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/app\/fluentwebauthncredential\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/app\/fluentwebauthncredential\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/children","title":"FluentWebAuthnCredential.Children","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/compositechildren","title":"FluentWebAuthnCredential.CompositeChildren","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/compositeid","title":"FluentWebAuthnCredential.CompositeID","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/compositeoptionalchild","title":"FluentWebAuthnCredential.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/compositeoptionalparent","title":"FluentWebAuthnCredential.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/compositeparent","title":"FluentWebAuthnCredential.CompositeParent","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/id-swift.typealias","title":"FluentWebAuthnCredential.ID","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/optionalchild","title":"FluentWebAuthnCredential.OptionalChild","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/optionalparent","title":"FluentWebAuthnCredential.OptionalParent","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/parent","title":"FluentWebAuthnCredential.Parent","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/siblings","title":"FluentWebAuthnCredential.Siblings","type":"typealias"},{"path":"\/documentation\/app\/fluentwebauthncredential\/timestamp","title":"FluentWebAuthnCredential.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/find(_:on:)-3asv6","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/find(_:on:)-64wl5","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/app\/fluentwebauthncredential\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/app\/fluentwebauthncredential\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthncredential\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/app\/fluentwebauthncredential\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/app\/fluentwebauthncredential\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/app\/fluentwebauthncredential\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/app\/fluentwebauthncredential","title":"FluentWebAuthnCredential","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/object\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/object\/attachment","title":"var attachment: [any ObjectOrLink]","type":"property"},{"path":"\/documentation\/app\/object\/attributedto","title":"var attributedTo: [any ObjectOrLink]","type":"property"},{"path":"\/documentation\/app\/object\/audience","title":"var audience: [any ObjectOrLink]","type":"property"},{"path":"\/documentation\/app\/object\/content","title":"var content: Object?","type":"property"},{"path":"\/documentation\/app\/object\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/app\/object\/islink","title":"let isLink: Bool","type":"property"},{"path":"\/documentation\/app\/object\/isobject","title":"let isObject: Bool","type":"property"},{"path":"\/documentation\/app\/object\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/app\/object\/processingcontext","title":"var processingContext: String","type":"property"},{"path":"\/documentation\/app\/object\/type","title":"var type: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/object\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/object\/codingkeys\/attachment","title":"case attachment","type":"case"},{"path":"\/documentation\/app\/object\/codingkeys\/attributedto","title":"case attributedTo","type":"case"},{"path":"\/documentation\/app\/object\/codingkeys\/audience","title":"case audience","type":"case"},{"path":"\/documentation\/app\/object\/codingkeys\/content","title":"case content","type":"case"},{"path":"\/documentation\/app\/object\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/app\/object\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/app\/object\/codingkeys\/processingcontext","title":"case processingContext","type":"case"},{"path":"\/documentation\/app\/object\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/object\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/app\/object\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/app\/object\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/object\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/app\/object\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/object\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/app\/object\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/app\/object\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/object\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/object\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/app\/object\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/app\/object\/codingkeys","title":"Object.CodingKeys","type":"enum"}],"path":"\/documentation\/app\/object","title":"Object","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/apparguments\/certificatechain","title":"var certificateChain: String","type":"property"},{"path":"\/documentation\/app\/apparguments\/hostname","title":"var hostname: String","type":"property"},{"path":"\/documentation\/app\/apparguments\/inmemorydatabase","title":"var inMemoryDatabase: Bool","type":"property"},{"path":"\/documentation\/app\/apparguments\/loglevel","title":"var logLevel: Logger.Level?","type":"property"},{"path":"\/documentation\/app\/apparguments\/port","title":"var port: Int","type":"property"},{"path":"\/documentation\/app\/apparguments\/privatekey","title":"var privateKey: String","type":"property"}],"path":"\/documentation\/app\/apparguments","title":"AppArguments","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/attributeto\/attributableto","title":"var attributableTo: String","type":"property"}],"path":"\/documentation\/app\/attributeto","title":"AttributeTo","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/objectorlink\/islink","title":"var isLink: Bool","type":"property"},{"path":"\/documentation\/app\/objectorlink\/isobject","title":"var isObject: Bool","type":"property"}],"path":"\/documentation\/app\/objectorlink","title":"ObjectOrLink","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/app\/personstorage\/identifier","title":"Identifier","type":"associatedtype"},{"path":"\/documentation\/app\/personstorage\/person","title":"Person","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/personstorage\/create(from:)","title":"func create(from: CreatePerson) async throws -> Self.Person?","type":"method"},{"path":"\/documentation\/app\/personstorage\/get(criteria:)","title":"func get(criteria: PersonCriteria) async -> Self.Person?","type":"method"}],"path":"\/documentation\/app\/personstorage","title":"PersonStorage","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/statusstorage\/create(from:)","title":"func create(from: Status) async throws","type":"method"},{"path":"\/documentation\/app\/statusstorage\/get(criteria:)","title":"func get(criteria: StatusCriteria) async -> Status?","type":"method"}],"path":"\/documentation\/app\/statusstorage","title":"StatusStorage","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnstorage\/create(from:)","title":"func create(from: CreateWebAuthN) async throws -> WebAuthNModel?","type":"method"},{"path":"\/documentation\/app\/webauthnstorage\/get(criteria:)","title":"func get(criteria: WebAuthNCriteria) async -> WebAuthNModel?","type":"method"}],"path":"\/documentation\/app\/webauthnstorage","title":"WebAuthNStorage","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/app\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/app\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/app\/init(inmemorydatabase:hostname:port:loglevel:)","title":"init(inMemoryDatabase: Bool, hostname: String, port: Int, logLevel: Option<Logger.Level?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/app\/certificatechain","title":"var certificateChain: String","type":"property"},{"path":"\/documentation\/app\/app\/hostname","title":"var hostname: String","type":"property"},{"path":"\/documentation\/app\/app\/inmemorydatabase","title":"var inMemoryDatabase: Bool","type":"property"},{"path":"\/documentation\/app\/app\/loglevel","title":"var logLevel: Logger.Level?","type":"property"},{"path":"\/documentation\/app\/app\/port","title":"var port: Int","type":"property"},{"path":"\/documentation\/app\/app\/privatekey","title":"var privateKey: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/app\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/app\/main()-40jml","title":"static func main() async","type":"method"},{"path":"\/documentation\/app\/app\/main(_:)-5qi5f","title":"static func main([String]?) async","type":"method"}],"path":"\/documentation\/app\/app\/asyncparsablecommand-implementations","title":"AsyncParsableCommand Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/app\/validate()","title":"func validate() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/app\/_errorlabel","title":"static var _errorLabel: String","type":"property"},{"path":"\/documentation\/app\/app\/ascommand","title":"static var asCommand: any ParsableCommand.Type","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/app\/_dumphelp()","title":"static func _dumpHelp() -> String","type":"method"},{"path":"\/documentation\/app\/app\/completionscript(for:)","title":"static func completionScript(for: CompletionShell) -> String","type":"method"},{"path":"\/documentation\/app\/app\/exit(witherror:)","title":"static func exit(withError: (any Error)?) -> Never","type":"method"},{"path":"\/documentation\/app\/app\/exitcode(for:)","title":"static func exitCode(for: any Error) -> ExitCode","type":"method"},{"path":"\/documentation\/app\/app\/fullmessage(for:)","title":"static func fullMessage(for: any Error) -> String","type":"method"},{"path":"\/documentation\/app\/app\/fullmessage(for:columns:)","title":"static func fullMessage(for: any Error, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/app\/helpmessage(columns:)","title":"static func helpMessage(columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/app\/helpmessage(includehidden:columns:)","title":"static func helpMessage(includeHidden: Bool, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/app\/message(for:)","title":"static func message(for: any Error) -> String","type":"method"},{"path":"\/documentation\/app\/app\/parse(_:)","title":"static func parse([String]?) throws -> Self","type":"method"},{"path":"\/documentation\/app\/app\/parseorexit(_:)","title":"static func parseOrExit([String]?) -> Self","type":"method"},{"path":"\/documentation\/app\/app\/usagestring(includehidden:)","title":"static func usageString(includeHidden: Bool) -> String","type":"method"}],"path":"\/documentation\/app\/app\/parsablearguments-implementations","title":"ParsableArguments Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/app\/_commandname","title":"static var _commandName: String","type":"property"},{"path":"\/documentation\/app\/app\/configuration","title":"static var configuration: CommandConfiguration","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/app\/helpmessage(for:columns:)","title":"static func helpMessage(for: any ParsableCommand.Type, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/app\/helpmessage(for:includehidden:columns:)","title":"static func helpMessage(for: any ParsableCommand.Type, includeHidden: Bool, columns: Int?) -> String","type":"method"},{"path":"\/documentation\/app\/app\/main()-16m27","title":"static func main()","type":"method"},{"path":"\/documentation\/app\/app\/main(_:)-6hjmz","title":"static func main([String]?)","type":"method"},{"path":"\/documentation\/app\/app\/parseasroot(_:)","title":"static func parseAsRoot([String]?) throws -> any ParsableCommand","type":"method"},{"path":"\/documentation\/app\/app\/usagestring(for:includehidden:)","title":"static func usageString(for: any ParsableCommand.Type, includeHidden: Bool) -> String","type":"method"}],"path":"\/documentation\/app\/app\/parsablecommand-implementations","title":"ParsableCommand Implementations","type":"symbol"}],"path":"\/documentation\/app\/app","title":"App","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentperson\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentperson\/prepare(on:)","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createfluentperson\/revert(on:)","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentperson\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createfluentperson\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentperson\/prepare(on:)-40555","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createfluentperson\/revert(on:)-6n3nq","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createfluentperson\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createfluentperson","title":"CreateFluentPerson","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentstatus\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentstatus\/prepare(on:)","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createfluentstatus\/revert(on:)","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentstatus\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createfluentstatus\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentstatus\/prepare(on:)-7b6tt","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createfluentstatus\/revert(on:)-19wik","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createfluentstatus\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createfluentstatus","title":"CreateFluentStatus","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentwebauthncredential\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentwebauthncredential\/prepare(on:)","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createfluentwebauthncredential\/revert(on:)","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentwebauthncredential\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createfluentwebauthncredential\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createfluentwebauthncredential\/prepare(on:)-7w38x","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createfluentwebauthncredential\/revert(on:)-9bu72","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createfluentwebauthncredential\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createfluentwebauthncredential","title":"CreateFluentWebAuthnCredential","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createperson\/init(name:fullname:)","title":"init(name: String, fullName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createperson\/fullname","title":"let fullName: String","type":"property"},{"path":"\/documentation\/app\/createperson\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/app\/createperson","title":"CreatePerson","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createpersonnameindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createpersonnameindex\/prepare(on:)","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createpersonnameindex\/revert(on:)","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createpersonnameindex\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createpersonnameindex\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createpersonnameindex\/prepare(on:)-2c2cd","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createpersonnameindex\/revert(on:)-99cv1","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createpersonnameindex\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createpersonnameindex","title":"CreatePersonNameIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusaccountidindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusaccountidindex\/prepare(on:)","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createstatusaccountidindex\/revert(on:)","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusaccountidindex\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createstatusaccountidindex\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusaccountidindex\/prepare(on:)-7bnip","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createstatusaccountidindex\/revert(on:)-6gp1r","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createstatusaccountidindex\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createstatusaccountidindex","title":"CreateStatusAccountIdIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusconversationidindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusconversationidindex\/prepare(on:)","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createstatusconversationidindex\/revert(on:)","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusconversationidindex\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createstatusconversationidindex\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusconversationidindex\/prepare(on:)-4wjna","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createstatusconversationidindex\/revert(on:)-txhq","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createstatusconversationidindex\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createstatusconversationidindex","title":"CreateStatusConversationIdIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusinreplytoidindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusinreplytoidindex\/prepare(on:)","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createstatusinreplytoidindex\/revert(on:)","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusinreplytoidindex\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createstatusinreplytoidindex\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createstatusinreplytoidindex\/prepare(on:)-2g8br","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createstatusinreplytoidindex\/revert(on:)-9pjvc","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createstatusinreplytoidindex\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createstatusinreplytoidindex","title":"CreateStatusInReplyToIdIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createwebauthn\/init(useruuid:publickey:)","title":"init(userUuid: UUID, publicKey: Credential)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createwebauthn\/publickey","title":"let publicKey: Credential","type":"property"},{"path":"\/documentation\/app\/createwebauthn\/useruuid","title":"let userUuid: UUID","type":"property"}],"path":"\/documentation\/app\/createwebauthn","title":"CreateWebAuthN","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonstorage\/init(fluent:)","title":"init(fluent: Fluent)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonstorage\/fluent","title":"let fluent: Fluent","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonstorage\/create(from:)","title":"func create(from: CreatePerson) throws -> Person?","type":"method"},{"path":"\/documentation\/app\/fluentpersonstorage\/get(criteria:)","title":"func get(criteria: PersonCriteria) async -> Person?","type":"method"},{"path":"\/documentation\/app\/fluentpersonstorage\/getuser(from:context:)-3yr4g","title":"func getUser(from: String, context: UserRepositoryContext) async throws -> Person?","type":"method"},{"path":"\/documentation\/app\/fluentpersonstorage\/getuser(from:context:)-7mlfa","title":"func getUser(from: WebAuthnSession, context: UserRepositoryContext) async throws -> Person?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/fluentpersonstorage\/identifier","title":"FluentPersonStorage.Identifier","type":"typealias"},{"path":"\/documentation\/app\/fluentpersonstorage\/user","title":"FluentPersonStorage.User","type":"typealias"}],"path":"\/documentation\/app\/fluentpersonstorage","title":"FluentPersonStorage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusstorage\/init(fluent:logger:)","title":"init(fluent: Fluent, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusstorage\/fluent","title":"let fluent: Fluent","type":"property"},{"path":"\/documentation\/app\/fluentstatusstorage\/logger","title":"let logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentstatusstorage\/create(from:)","title":"func create(from: Status) async throws","type":"method"},{"path":"\/documentation\/app\/fluentstatusstorage\/get(criteria:)","title":"func get(criteria: StatusCriteria) async -> Status?","type":"method"}],"path":"\/documentation\/app\/fluentstatusstorage","title":"FluentStatusStorage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthnstorage\/init(fluent:)","title":"init(fluent: Fluent)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthnstorage\/fluent","title":"let fluent: Fluent","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentwebauthnstorage\/create(from:)","title":"func create(from: CreateWebAuthN) throws -> WebAuthNModel?","type":"method"},{"path":"\/documentation\/app\/fluentwebauthnstorage\/get(criteria:)","title":"func get(criteria: WebAuthNCriteria) async -> WebAuthNModel?","type":"method"}],"path":"\/documentation\/app\/fluentwebauthnstorage","title":"FluentWebAuthNStorage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/html\/init(html:)","title":"init(html: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/html\/html","title":"let html: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/html\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/app\/html","title":"HTML","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/htmlcontroller\/init(mustachelibrary:webauthnsessionauthenticator:)","title":"init(mustacheLibrary: MustacheLibrary, webAuthnSessionAuthenticator: SessionAuthenticator<HTMLController.Context, FluentPersonStorage>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/htmlcontroller\/body","title":"var body: some RouterMiddleware<WebAuthnRequestContext>","type":"property"},{"path":"\/documentation\/app\/htmlcontroller\/hometemplate","title":"let homeTemplate: MustacheTemplate","type":"property"},{"path":"\/documentation\/app\/htmlcontroller\/webauthnsessionauthenticator","title":"let webAuthnSessionAuthenticator: SessionAuthenticator<HTMLController.Context, FluentPersonStorage>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/htmlcontroller\/home(request:context:)","title":"func home(request: Request, context: HTMLController.Context) async throws -> HTML","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/htmlcontroller\/context","title":"HTMLController.Context","type":"typealias"}],"path":"\/documentation\/app\/htmlcontroller","title":"HTMLController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/jwtauth\/init(jwtkeycollection:logger:fluent:)","title":"init(jwtKeyCollection: JWTKeyCollection, logger: Logger, fluent: Fluent)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/jwtauth\/fluent","title":"let fluent: Fluent","type":"property"},{"path":"\/documentation\/app\/jwtauth\/jwtkeycollection","title":"let jwtKeyCollection: JWTKeyCollection","type":"property"},{"path":"\/documentation\/app\/jwtauth\/logger","title":"let logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/jwtauth\/authenticate(request:context:)","title":"func authenticate(request: Request, context: WebAuthnRequestContext) async throws -> Person?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/jwtauth\/context","title":"JWTAuth.Context","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/jwtauth\/handle(_:context:next:)","title":"func handle(Request, context: Self.Context, next: (Request, Self.Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/app\/jwtauth\/authenticatormiddleware-implementations","title":"AuthenticatorMiddleware Implementations","type":"symbol"}],"path":"\/documentation\/app\/jwtauth","title":"JWTAuth","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/personcontroller\/init(repository:logger:)","title":"init(repository: any PersonStorage, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/personcontroller\/body","title":"var body: some RouterMiddleware<WebAuthnRequestContext>","type":"property"},{"path":"\/documentation\/app\/personcontroller\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/app\/personcontroller\/repository","title":"let repository: any PersonStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/personcontroller\/get(request:context:)","title":"func get(request: Request, context: some RequestContext) async throws -> MastodonAccount?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/personcontroller\/context","title":"PersonController.Context","type":"typealias"}],"path":"\/documentation\/app\/personcontroller","title":"PersonController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/personcriteria\/init(handle:id:)","title":"init(handle: String?, id: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/personcriteria\/handle","title":"var handle: String?","type":"property"},{"path":"\/documentation\/app\/personcriteria\/id","title":"var id: String?","type":"property"}],"path":"\/documentation\/app\/personcriteria","title":"PersonCriteria","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/personendpoints\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/personendpoints\/init(sharedinbox:)","title":"init(sharedInbox: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/personendpoints\/sharedinbox","title":"var sharedInbox: String","type":"property"}],"path":"\/documentation\/app\/personendpoints","title":"PersonEndpoints","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/redirectmiddleware\/init(to:)","title":"init(to: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/redirectmiddleware\/to","title":"let to: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/redirectmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/app\/redirectmiddleware","title":"RedirectMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/requestloggermiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/requestloggermiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/app\/requestloggermiddleware","title":"RequestLoggerMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/roleclaim\/init(value:)","title":"init(value: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/roleclaim\/value","title":"var value: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/roleclaim\/verifyadmin()","title":"func verifyAdmin() throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/roleclaim\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/roleclaim\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/roleclaim\/jwtclaim-implementations","title":"JWTClaim Implementations","type":"symbol"}],"path":"\/documentation\/app\/roleclaim","title":"RoleClaim","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/statuscontroller\/init(repository:logger:)","title":"init(repository: any StatusStorage, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/statuscontroller\/body","title":"var body: some RouterMiddleware<WebAuthnRequestContext>","type":"property"},{"path":"\/documentation\/app\/statuscontroller\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/app\/statuscontroller\/repository","title":"let repository: any StatusStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/statuscontroller\/create(request:context:)","title":"func create(request: Request, context: some RequestContext) async throws -> MastodonStatus?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/statuscontroller\/context","title":"StatusController.Context","type":"typealias"}],"path":"\/documentation\/app\/statuscontroller","title":"StatusController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/statuscriteria\/init(id:)","title":"init(id: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/statuscriteria\/id","title":"let id: String","type":"property"}],"path":"\/documentation\/app\/statuscriteria","title":"StatusCriteria","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/timelinecontroller\/init(fluent:logger:)","title":"init(fluent: Fluent, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/timelinecontroller\/body","title":"var body: some RouterMiddleware<WebAuthnRequestContext>","type":"property"},{"path":"\/documentation\/app\/timelinecontroller\/fluent","title":"let fluent: Fluent","type":"property"},{"path":"\/documentation\/app\/timelinecontroller\/logger","title":"let logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/timelinecontroller\/home(request:context:)","title":"func home(request: Request, context: some RequestContext) async throws -> [MastodonStatus]","type":"method"},{"path":"\/documentation\/app\/timelinecontroller\/liststatuses(request:context:)","title":"func listStatuses(request: Request, context: some RequestContext) async throws -> [MastodonStatus]","type":"method"},{"path":"\/documentation\/app\/timelinecontroller\/publicstatuses(request:context:)","title":"func publicStatuses(request: Request, context: some RequestContext) async throws -> [MastodonStatus]","type":"method"},{"path":"\/documentation\/app\/timelinecontroller\/tagstatuses(request:context:)","title":"func tagStatuses(request: Request, context: some RequestContext) async throws -> [MastodonStatus]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/timelinecontroller\/context","title":"TimelineController.Context","type":"typealias"}],"path":"\/documentation\/app\/timelinecontroller","title":"TimelineController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/tokenresponse\/init(token:expiry:)","title":"init(token: String, expiry: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/tokenresponse\/expiry","title":"let expiry: Date","type":"property"},{"path":"\/documentation\/app\/tokenresponse\/token","title":"let token: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/tokenresponse\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/app\/tokenresponse\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/app\/tokenresponse","title":"TokenResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/init(from:)-19ahs","title":"init(from: String)","type":"init"},{"path":"\/documentation\/app\/userpayload\/init(from:)-5ward","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/expiration","title":"let expiration: ExpirationClaim","type":"property"},{"path":"\/documentation\/app\/userpayload\/userid","title":"let userID: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/verify(using:)","title":"func verify(using: some JWTAlgorithm) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/expiration","title":"case expiration","type":"case"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/userid","title":"case userID","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/userpayload\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/app\/userpayload\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/userpayload\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/app\/userpayload\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/app\/userpayload\/codingkeys","title":"UserPayload.CodingKeys","type":"enum"}],"path":"\/documentation\/app\/userpayload","title":"UserPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/webauthncriteria\/init(useruuid:)","title":"init(userUuid: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/webauthncriteria\/useruuid","title":"var userUuid: String","type":"property"}],"path":"\/documentation\/app\/webauthncriteria","title":"WebAuthNCriteria","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnmodel\/init(useruuid:publickey:)","title":"init(userUuid: UUID, publicKey: EncodedBase64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnmodel\/publickey","title":"let publicKey: EncodedBase64","type":"property"},{"path":"\/documentation\/app\/webauthnmodel\/useruuid","title":"let userUuid: UUID","type":"property"}],"path":"\/documentation\/app\/webauthnmodel","title":"WebAuthNModel","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/webauthncontroller\/signupinput\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/webauthncontroller\/signupinput\/init(username:)","title":"init(username: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/webauthncontroller\/signupinput\/username","title":"let username: String","type":"property"}],"path":"\/documentation\/app\/webauthncontroller\/signupinput","title":"WebAuthnController.SignUpInput","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/webauthncontroller\/init(webauthn:fluent:webauthnsessionauthenticator:jwtkeycollection:logger:)","title":"init(webauthn: WebAuthnManager, fluent: Fluent, webAuthnSessionAuthenticator: SessionAuthenticator<WebAuthnController.Context, FluentPersonStorage>, jwtKeyCollection: JWTKeyCollection, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/webauthncontroller\/body","title":"var body: some RouterMiddleware<WebAuthnRequestContext>","type":"property"},{"path":"\/documentation\/app\/webauthncontroller\/fluent","title":"let fluent: Fluent","type":"property"},{"path":"\/documentation\/app\/webauthncontroller\/jwtkeycollection","title":"let jwtKeyCollection: JWTKeyCollection","type":"property"},{"path":"\/documentation\/app\/webauthncontroller\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/app\/webauthncontroller\/webauthnsessionauthenticator","title":"let webAuthnSessionAuthenticator: SessionAuthenticator<WebAuthnController.Context, FluentPersonStorage>","type":"property"},{"path":"\/documentation\/app\/webauthncontroller\/webauthn","title":"let webauthn: WebAuthnManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/webauthncontroller\/beginauthentication(_:context:)","title":"func beginAuthentication(Request, context: WebAuthnController.Context) async throws -> PublicKeyCredentialRequestOptions","type":"method"},{"path":"\/documentation\/app\/webauthncontroller\/beginregistration(request:context:)","title":"func beginRegistration(request: Request, context: WebAuthnController.Context) async throws -> PublicKeyCredentialCreationOptions","type":"method"},{"path":"\/documentation\/app\/webauthncontroller\/finishauthentication(request:context:)","title":"func finishAuthentication(request: Request, context: WebAuthnController.Context) async throws -> HTTPResponse.Status","type":"method"},{"path":"\/documentation\/app\/webauthncontroller\/finishregistration(request:context:)","title":"func finishRegistration(request: Request, context: WebAuthnController.Context) async throws -> HTTPResponse.Status","type":"method"},{"path":"\/documentation\/app\/webauthncontroller\/gettoken(_:context:)","title":"func getToken(Request, context: WebAuthnController.Context) async throws -> TokenResponse","type":"method"},{"path":"\/documentation\/app\/webauthncontroller\/logout(_:context:)","title":"func logout(Request, context: WebAuthnController.Context) async throws -> HTTPResponse.Status","type":"method"},{"path":"\/documentation\/app\/webauthncontroller\/signup(request:context:)","title":"func signup(request: Request, context: WebAuthnController.Context) async throws -> Response","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/webauthncontroller\/context","title":"WebAuthnController.Context","type":"typealias"}],"path":"\/documentation\/app\/webauthncontroller","title":"WebAuthnController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnrequestcontext\/init(source:)","title":"init(source: ApplicationRequestContextSource)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnrequestcontext\/corecontext","title":"var coreContext: CoreRequestContextStorage","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/identity","title":"var identity: Person?","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/responseencoder","title":"var responseEncoder: any ResponseEncoder","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/routercontext","title":"var routerContext: RouterBuilderContext","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/sessions","title":"let sessions: SessionContext<WebAuthnSession>","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnrequestcontext\/session","title":"WebAuthnRequestContext.Session","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnrequestcontext\/requireidentity()","title":"func requireIdentity() throws -> Self.Identity","type":"method"}],"path":"\/documentation\/app\/webauthnrequestcontext\/authrequestcontext-implementations","title":"AuthRequestContext Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/app\/webauthnrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"}],"path":"\/documentation\/app\/webauthnrequestcontext\/requestcontext-implementations","title":"RequestContext Implementations","type":"symbol"}],"path":"\/documentation\/app\/webauthnrequestcontext","title":"WebAuthnRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/wellknowncontroller\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/wellknowncontroller\/body","title":"var body: some RouterMiddleware<WebAuthnRequestContext>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/wellknowncontroller\/webfinger(request:context:)","title":"func webfinger(request: Request, context: WebAuthnRequestContext) async throws -> WebFinger?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/wellknowncontroller\/context","title":"WellKnownController.Context","type":"typealias"}],"path":"\/documentation\/app\/wellknowncontroller","title":"WellKnownController","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/app\/personbaseurl","title":"let personBaseURL: String","type":"var"},{"path":"\/documentation\/app\/persontype","title":"let personType: String","type":"var"},{"path":"\/documentation\/app\/sharedinboxurl","title":"let sharedInboxURL: String","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/app\/addpersonmigrations(fluent:)","title":"func AddPersonMigrations(fluent: Fluent) async","type":"func"},{"path":"\/documentation\/app\/addstatusmigrations(fluent:)","title":"func AddStatusMigrations(fluent: Fluent) async","type":"func"},{"path":"\/documentation\/app\/decodearrayofobjectorlink(unkeyedcontainer:)","title":"func DecodeArrayOfObjectOrLink(unkeyedContainer: any UnkeyedDecodingContainer) -> [any ObjectOrLink]","type":"func"},{"path":"\/documentation\/app\/dummypersonmodels()","title":"func DummyPersonModels() -> [Person]","type":"func"},{"path":"\/documentation\/app\/parserfctimestamptoutc(fromstring:)","title":"func ParseRFCTimestampToUTC(fromString: String) -> Date","type":"func"},{"path":"\/documentation\/app\/rfc3339timestamp(fromdate:)","title":"func RFC3339Timestamp(fromDate: Date) -> String","type":"func"},{"path":"\/documentation\/app\/buildapplication(_:)","title":"func buildApplication(some AppArguments) async throws -> some ApplicationProtocol","type":"func"},{"path":"\/documentation\/app\/servername()","title":"func serverName() -> String","type":"func"},{"path":"\/documentation\/app\/serverurl()","title":"func serverURL() -> String","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/apprequestcontext","title":"AppRequestContext","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/authenticationsession\/authenticated(user:)","title":"case authenticated(user: Person)","type":"case"},{"path":"\/documentation\/app\/authenticationsession\/authenticating(challenge:)","title":"case authenticating(challenge: [UInt8])","type":"case"},{"path":"\/documentation\/app\/authenticationsession\/registering(user:challenge:)","title":"case registering(user: Person, challenge: [UInt8])","type":"case"},{"path":"\/documentation\/app\/authenticationsession\/signedup(user:)","title":"case signedUp(user: Person)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/authenticationsession\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/authenticationsession","title":"AuthenticationSession","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/personerror\/idmissing","title":"case idMissing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/app\/personerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/app\/personerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/personerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/app\/personerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/app\/personerror","title":"PersonError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnsession\/authenticated(userid:)","title":"case authenticated(userId: UUID)","type":"case"},{"path":"\/documentation\/app\/webauthnsession\/authenticating(encodedchallenge:)","title":"case authenticating(encodedChallenge: String)","type":"case"},{"path":"\/documentation\/app\/webauthnsession\/registering(userid:encodedchallenge:)","title":"case registering(userId: UUID, encodedChallenge: String)","type":"case"},{"path":"\/documentation\/app\/webauthnsession\/signedup(userid:)","title":"case signedUp(userId: UUID)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnsession\/init(from:)-5897y","title":"init(from: AuthenticationSession) throws","type":"init"},{"path":"\/documentation\/app\/webauthnsession\/init(from:)-c9y8","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/webauthnsession\/session(fluent:)","title":"func session(fluent: Fluent) async throws -> AuthenticationSession?","type":"method"}],"path":"\/documentation\/app\/webauthnsession","title":"WebAuthnSession","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentkit\/fieldproperty\/transform(_:)","title":"func transform(String) -> Any?","type":"method"}],"path":"\/documentation\/app\/fluentkit\/fieldproperty\/mustachetransformable-implementations","title":"MustacheTransformable Implementations","type":"symbol"}],"path":"\/documentation\/app\/fluentkit\/fieldproperty","title":"FieldProperty","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fluentkit\/idproperty\/transform(_:)","title":"func transform(String) -> Any?","type":"method"}],"path":"\/documentation\/app\/fluentkit\/idproperty\/mustachetransformable-implementations","title":"MustacheTransformable Implementations","type":"symbol"}],"path":"\/documentation\/app\/fluentkit\/idproperty","title":"IDProperty","type":"extension"}],"path":"\/documentation\/app\/fluentkit","title":"FluentKit","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/foundation\/bundle\/module","title":"static let module: Bundle","type":"property"}],"path":"\/documentation\/app\/foundation\/bundle","title":"Bundle","type":"extension"}],"path":"\/documentation\/app\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/logging\/logger\/level\/allvaluestrings-2qalm","title":"static var allValueStrings: [String]","type":"property"},{"path":"\/documentation\/app\/logging\/logger\/level\/allvaluestrings-2rq0o","title":"static var allValueStrings: [String]","type":"property"},{"path":"\/documentation\/app\/logging\/logger\/level\/defaultcompletionkind-14qqa","title":"static var defaultCompletionKind: CompletionKind","type":"property"},{"path":"\/documentation\/app\/logging\/logger\/level\/defaultcompletionkind-8981j","title":"static var defaultCompletionKind: CompletionKind","type":"property"}],"path":"\/documentation\/app\/logging\/logger\/level\/expressiblebyargument-implementations","title":"ExpressibleByArgument Implementations","type":"symbol"}],"path":"\/documentation\/app\/logging\/logger\/level","title":"Logger.Level","type":"extension"}],"path":"\/documentation\/app\/logging\/logger","title":"Logger","type":"extension"}],"path":"\/documentation\/app\/logging","title":"Logging","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/webauthn\/publickeycredentialcreationoptions\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/app\/webauthn\/publickeycredentialcreationoptions\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/app\/webauthn\/publickeycredentialcreationoptions","title":"PublicKeyCredentialCreationOptions","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/webauthn\/publickeycredentialrequestoptions\/response(from:context:)","title":"func response(from: Request, context: some RequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/app\/webauthn\/publickeycredentialrequestoptions\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/app\/webauthn\/publickeycredentialrequestoptions","title":"PublicKeyCredentialRequestOptions","type":"extension"}],"path":"\/documentation\/app\/webauthn","title":"WebAuthn","type":"extension"}],"path":"\/documentation\/app","title":"App","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}