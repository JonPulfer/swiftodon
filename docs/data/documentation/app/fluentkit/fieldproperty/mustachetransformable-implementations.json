{"identifier":{"url":"doc:\/\/App\/documentation\/App\/FluentKit\/FieldProperty\/MustacheTransformable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/App\/documentation\/App\/FluentKit\/FieldProperty\/transform(_:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"metadata":{"roleHeading":"API Collection","modules":[{"name":"App"}],"role":"collectionGroup","title":"MustacheTransformable Implementations"},"hierarchy":{"paths":[["doc:\/\/App\/documentation\/App","doc:\/\/App\/documentation\/App\/FluentKit","doc:\/\/App\/documentation\/App\/FluentKit\/FieldProperty"]]},"variants":[{"paths":["\/documentation\/app\/fluentkit\/fieldproperty\/mustachetransformable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"article","references":{"doc://App/documentation/App/FluentKit":{"role":"collection","type":"topic","abstract":[],"identifier":"doc:\/\/App\/documentation\/App\/FluentKit","title":"FluentKit","url":"\/documentation\/app\/fluentkit","kind":"symbol"},"doc://App/documentation/App":{"url":"\/documentation\/app","title":"App","abstract":[{"text":"Drop in replacement for a mastodon service.","type":"text"}],"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/App\/documentation\/App"},"doc://App/documentation/App/FluentKit/FieldProperty":{"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:9FluentKit13FieldPropertyC","text":"FieldProperty"}],"identifier":"doc:\/\/App\/documentation\/App\/FluentKit\/FieldProperty","title":"FieldProperty","navigatorTitle":[{"kind":"identifier","text":"FieldProperty"}],"kind":"symbol","url":"\/documentation\/app\/fluentkit\/fieldproperty","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Extend @propertyWrapper FieldProperty to enable mustache transform functions and add one"},{"type":"text","text":" "},{"type":"text","text":"to access the wrappedValue. In the mustache template you would access this with"},{"type":"text","text":" "},{"type":"codeVoice","code":"{{wrappedValue(_myProperty)}}"},{"type":"text","text":". Note the "},{"type":"codeVoice","code":"_"},{"type":"text","text":" prefix on the property name. This is"},{"type":"text","text":" "},{"type":"text","text":"required as this is how property wrappers appear in the Mirror reflection data."}]},"doc://App/documentation/App/FluentKit/FieldProperty/transform(_:)":{"url":"\/documentation\/app\/fluentkit\/fieldproperty\/transform(_:)","abstract":[],"title":"transform(_:)","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Model"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Fields"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transform"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/App\/documentation\/App\/FluentKit\/FieldProperty\/transform(_:)","type":"topic","role":"symbol"}}}